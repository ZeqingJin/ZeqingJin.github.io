<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zeqing Jin</title>
    <link>https://zeqingjin.github.io/</link>
    <description>Recent content on Zeqing Jin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 20 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://zeqingjin.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Render LaTeX using KaTeX</title>
      <link>https://zeqingjin.github.io/posts/render-latex-using-katex/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/posts/render-latex-using-katex/</guid>
      <description>Enable katex by adding katex = &amp;quot;true&amp;quot; to the front matter
+++ katex = &amp;#34;true&amp;#34; +++ If you want to enable KaTeX or MathJax for all post, add katex = ture or math = true in config.toml in [params] section.
It&amp;rsquo;s almost a dropin alternative to the mathjax solution,you should just choose one of them.
Inline math looks like this
This is text with inline math $\sum_{n=1}^{\infty} 2^{-n} = 1$ This is text with inline math $\sum_{n=1}^{\infty} 2^{-n} = 1$</description>
    </item>
    
    <item>
      <title>Hugo coder wiki</title>
      <link>https://zeqingjin.github.io/posts/hugo-coder-wiki/</link>
      <pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/posts/hugo-coder-wiki/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dummy</title>
      <link>https://zeqingjin.github.io/posts/dummy/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/posts/dummy/</guid>
      <description>Nada para ver aqui!</description>
    </item>
    
    <item>
      <title>Theme Demo</title>
      <link>https://zeqingjin.github.io/posts/theme-demo/</link>
      <pubDate>Sun, 08 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/posts/theme-demo/</guid>
      <description>Style Demo h1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading This is bold text
This is bold text
This is italic text
This is italic text
Deleted text
This is text with inline math $\sum_{n=1}^{\infty} 2^{-n} = 1$ and with math blocks:
$$ \sum_{n=1}^{\infty} 2^{-n} = 1 $$
Heading Another heading text text text text text text Block quotes are written like so.
They can span multiple paragraphs, if you like.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://zeqingjin.github.io/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://zeqingjin.github.io/posts/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/posts/hugo-template-primer/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://zeqingjin.github.io/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://zeqingjin.github.io/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/posts/migrate-from-jekyll/</guid>
      <description>Table of Contents Move static content to static Create your Hugo configuration file Set your configuration publish folder to site Convert Jekyll templates to Hugo templates Convert Jekyll plugins to Hugo shortcodes Implementation Usage Finishing Touches Fix Content Clean Up A practical example in a diff Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://zeqingjin.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/about/</guid>
      <description>I am currently a PhD candidate in Mechanical Engineering at UC Berkeley. My research area focuses on additive manufacturing, 3D-bioprinting, material design, and machine learning.
Although additive manufacturing technologies have made huge strides in the past decades, there are still challenges when it comes to defects that may occur during printing, influencing the part quality and reliability. These defects can often be reduced by optimizing the process parameter settings; conventional trial-and-error processes to do so, however, is inefficient and expensive.</description>
    </item>
    
    <item>
      <title>Album</title>
      <link>https://zeqingjin.github.io/album/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/album/</guid>
      <description>MRS 2022, Honolulu Group Meeting 2021, Zoom TMS 2020, San Diego </description>
    </item>
    
    <item>
      <title>First snippet</title>
      <link>https://zeqingjin.github.io/snippets/first/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/snippets/first/</guid>
      <description>This content is in snippets/first/index.md
pwd </description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://zeqingjin.github.io/research/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/research/</guid>
      <description>Journals Zeqing Jin, Grace Hu, Zhizhou Zhang, Shao-Yi Yu, and Grace X. Gu*. Modeling and analysis of post-processing conditions on 4D-bioprinting of deformable gelatin methacrylate (GelMA) based hydrogels. Under review, 2022
Zhizhou Zhang, Zeqing Jin, and Grace X. Gu*. Efficient pneumatic actuation modeling using hybrid physics-based and data-driven framework. Cell Reports Physical Science, 2022
Andrew Y. Chen, Elizabeth Pegg, Ailin Chen, Zeqing Jin, and Grace X. Gu*. 4D-printing of electro-active materials.</description>
    </item>
    
    <item>
      <title>Second snippet</title>
      <link>https://zeqingjin.github.io/snippets/second/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zeqingjin.github.io/snippets/second/</guid>
      <description>This content is in snippets/second/index.md
ls -la </description>
    </item>
    
  </channel>
</rss>
